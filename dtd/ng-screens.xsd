<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xs:element name="screens">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="screen"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="screen">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="section" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="name" use="required" />
            <xs:attribute type="xs:string" name="transaction-timeout" use="optional">
                <xs:annotation>
                    <xs:documentation>Transaction timeout in seconds</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="use-transaction" default="true">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="use-cache" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="section" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="condition" />
                <xs:element minOccurs="0" ref="actions" />
                <xs:element minOccurs="0" ref="widgets" />
                <xs:element minOccurs="0" ref="fail-widgets" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="name" />
        </xs:complexType>
    </xs:element>

    <!-- ================ CONDITIONS ================ -->
    <xs:element name="AllConditionals" abstract="true"/>
    <xs:element name="condition">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="1" maxOccurs="1" ref="AllConditionals"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="and" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="AllConditionals"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="xor" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="AllConditionals"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="or" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="AllConditionals"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="not" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="AllConditionals"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="if-service-permission" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:attribute type="xs:string" name="service-name" use="required" />
            <xs:attribute type="xs:string" name="resource-description" use="optional" />
            <xs:attribute type="xs:string" name="context-map" use="optional" />
            <xs:attribute name="main-action" use="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="CREATE" />
                        <xs:enumeration value="UPDATE" />
                        <xs:enumeration value="DELETE" />
                        <xs:enumeration value="VIEW" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="if-has-permission" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:attribute type="xs:string" name="permission" use="required" />
            <xs:attribute type="xs:string" name="action" />
        </xs:complexType>
    </xs:element>
    <xs:element name="if-entity-permission" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:choice minOccurs="0">
                <xs:element minOccurs="0" maxOccurs="1" ref="permission-condition-getter" />
                <xs:element minOccurs="0" maxOccurs="1" ref="related-role-getter" />
                <xs:element minOccurs="0" maxOccurs="1" ref="auxiliary-value-getter" />
            </xs:choice>
            <xs:attribute type="xs:string" name="entity-name" use="required" />
            <xs:attribute type="xs:string" name="entity-id" use="required">
                <xs:annotation>
                    <xs:documentation>Can have multiple pipe separated values, but don't use spaces.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute type="xs:string" name="target-operation" use="required">
                <xs:annotation>
                    <xs:documentation>Can have multiple pipe separated values, but don't use spaces.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="display-fail-cond" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="permission-condition-getter">
        <xs:complexType>
            <xs:attribute type="xs:string" name="entity-name" />
            <xs:attribute type="xs:string" name="operation-field-name" />
            <xs:attribute type="xs:string" name="role-field-name" />
            <xs:attribute type="xs:string" name="auxiliary-field-name" />
            <xs:attribute type="xs:string" name="status-field-name" />
            <xs:attribute type="xs:string" name="privilege-field-name" />
        </xs:complexType>
    </xs:element>
    <xs:element name="related-role-getter">
        <xs:complexType>
            <xs:attribute type="xs:string" name="entity-name" />
            <xs:attribute type="xs:string" name="role-entity-name" />
            <xs:attribute type="xs:string" name="role-type-field-name" />
            <xs:attribute type="xs:string" name="party-field-name" />
            <xs:attribute type="xs:string" name="owner-entity-field-name" />
            <xs:attribute type="xs:string" name="entity-id-name" />
        </xs:complexType>
    </xs:element>
    <xs:element name="auxiliary-value-getter">
        <xs:complexType>
            <xs:attribute type="xs:string" name="entity-name" />
            <xs:attribute type="xs:string" name="auxiliary-field-name" />
            <xs:attribute type="xs:string" name="entity-id-name" />
        </xs:complexType>
    </xs:element>
    <xs:element name="if-validate-method" substitutionGroup="AllConditionals">
        <xs:annotation>
            <xs:documentation>Calls a static Java method that takes a String and returns a boolean.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute type="xs:string" name="field" use="required" />
            <xs:attribute type="xs:string" name="method" use="required" />
            <xs:attribute type="xs:string" name="class" default="org.ofbiz.base.util.UtilValidate" />
        </xs:complexType>
    </xs:element>
    <xs:element name="if-compare" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:attribute name="field" type="xs:string" use="required" />
            <xs:attribute name="operator" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="less" />
                        <xs:enumeration value="greater" />
                        <xs:enumeration value="less-equals" />
                        <xs:enumeration value="greater-equals" />
                        <xs:enumeration value="equals" />
                        <xs:enumeration value="not-equals" />
                        <xs:enumeration value="contains" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="value" type="xs:string" use="required" />
            <xs:attribute name="type" default="String">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="PlainString" />
                        <xs:enumeration value="String" />
                        <xs:enumeration value="BigDecimal" />
                        <xs:enumeration value="Double" />
                        <xs:enumeration value="Float" />
                        <xs:enumeration value="Long" />
                        <xs:enumeration value="Integer" />
                        <xs:enumeration value="Date" />
                        <xs:enumeration value="Time" />
                        <xs:enumeration value="Timestamp" />
                        <xs:enumeration value="Boolean" />
                        <xs:enumeration value="Object" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute type="xs:string" name="format" />
        </xs:complexType>
    </xs:element>
    <xs:element name="if-compare-field" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:attribute name="field" type="xs:string" use="required" />
            <xs:attribute name="operator" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="less" />
                        <xs:enumeration value="greater" />
                        <xs:enumeration value="less-equals" />
                        <xs:enumeration value="greater-equals" />
                        <xs:enumeration value="equals" />
                        <xs:enumeration value="not-equals" />
                        <xs:enumeration value="contains" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="to-field" type="xs:string" />
            <xs:attribute name="type" default="String">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="PlainString" />
                        <xs:enumeration value="String" />
                        <xs:enumeration value="BigDecimal" />
                        <xs:enumeration value="Double" />
                        <xs:enumeration value="Float" />
                        <xs:enumeration value="Long" />
                        <xs:enumeration value="Integer" />
                        <xs:enumeration value="Date" />
                        <xs:enumeration value="Time" />
                        <xs:enumeration value="Timestamp" />
                        <xs:enumeration value="Boolean" />
                        <xs:enumeration value="Object" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute type="xs:string" name="format" />
        </xs:complexType>
    </xs:element>
    <xs:element name="if-regexp" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:attribute type="xs:string" name="field" use="required" />
            <xs:attribute type="xs:string" name="expr" use="required" />
        </xs:complexType>
    </xs:element>
    <xs:element name="if-empty" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:attribute type="xs:string" name="field" use="required" />
        </xs:complexType>
    </xs:element>
    <xs:element name="if-empty-section" substitutionGroup="AllConditionals">
        <xs:complexType>
            <xs:attribute type="xs:string" name="section-name" use="required" />
        </xs:complexType>
    </xs:element>

    <!-- ================ ACTIONS ================ -->
    <xs:element name="AllActions" abstract="true"/>
    <xs:element name="actions">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllActions"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="set" substitutionGroup="AllActions">
        <xs:complexType>
            <xs:attribute type="xs:string" name="field" use="required" />
            <xs:attribute type="xs:string" name="from-field" />
            <xs:attribute type="xs:string" name="value" />
            <xs:attribute type="xs:string" name="default-value" />
            <xs:attribute name="global" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="type">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="PlainString" />
                        <xs:enumeration value="String" />
                        <xs:enumeration value="BigDecimal" />
                        <xs:enumeration value="Double" />
                        <xs:enumeration value="Float" />
                        <xs:enumeration value="List" />
                        <xs:enumeration value="Long" />
                        <xs:enumeration value="Integer" />
                        <xs:enumeration value="Date" />
                        <xs:enumeration value="Time" />
                        <xs:enumeration value="Timestamp" />
                        <xs:enumeration value="Boolean" />
                        <xs:enumeration value="Object" />
                        <xs:enumeration value="NewList" />
                        <xs:enumeration value="NewMap" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="to-scope" default="screen">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="screen" />
                        <xs:enumeration value="user" />
                        <xs:enumeration value="application" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="from-scope" default="screen">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="screen" />
                        <xs:enumeration value="user" />
                        <xs:enumeration value="application" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="property-map" substitutionGroup="AllActions">
        <xs:complexType>
            <xs:attribute type="xs:string" name="resource" use="required" />
            <xs:attribute type="xs:string" name="map-name" use="required" />
            <xs:attribute name="global" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="property-to-field" substitutionGroup="AllActions">
        <xs:complexType>
            <xs:attribute type="xs:string" name="resource" use="required" />
            <xs:attribute type="xs:string" name="property" use="required" />
            <xs:attribute type="xs:string" name="field" use="required" />
            <xs:attribute type="xs:string" name="default" />
            <xs:attribute name="no-locale" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute type="xs:string" name="arg-list-name" />
        </xs:complexType>
    </xs:element>
    <xs:element name="script" substitutionGroup="AllActions">
        <xs:complexType>
            <xs:attribute type="xs:string" name="location" use="required" />
        </xs:complexType>
    </xs:element>
    <xs:element name="service" substitutionGroup="AllActions">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="field-map" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="service-name" use="required" />
            <xs:attribute type="xs:string" name="result-map" />
            <xs:attribute type="xs:string" name="auto-field-map" default="true">
                <xs:annotation>
                    <xs:documentation>This can be "true", "false" or the name of a Map in the context to use as the source Map for the service context.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="entity-and" substitutionGroup="AllActions">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="field-map" />
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="select-field" />
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="order-by" />
                <xs:choice minOccurs="0">
                    <xs:element ref="limit-range" />
                    <xs:element ref="limit-view" />
                    <xs:element ref="use-iterator" />
                </xs:choice>
            </xs:sequence>
            <xs:attribute type="xs:string" name="entity-name" use="required" />
            <xs:attribute name="use-cache" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="filter-by-date" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                        <xs:enumeration value="by-name" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute type="xs:string" name="list" use="required" />
            <xs:attribute name="result-set-type" default="scroll">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="forward" />
                        <xs:enumeration value="scroll" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="entity-condition" substitutionGroup="AllActions">
        <xs:complexType>
            <xs:sequence>
                <xs:choice minOccurs="0">
                    <xs:element ref="condition-expr" />
                    <xs:element ref="condition-list" />
                    <xs:element ref="condition-object" />
                </xs:choice>
                <xs:element minOccurs="0" ref="having-condition-list" />
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="select-field" />
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="order-by" />
                <xs:choice minOccurs="0">
                    <xs:element ref="limit-range" />
                    <xs:element ref="limit-view" />
                    <xs:element ref="use-iterator" />
                </xs:choice>
            </xs:sequence>
            <xs:attribute type="xs:string" name="entity-name" use="required" />
            <xs:attribute name="use-cache" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="filter-by-date" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                        <xs:enumeration value="by-name" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="distinct" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute type="xs:string" name="delegator-name" />
            <xs:attribute type="xs:string" name="list" use="required" />
            <xs:attribute name="result-set-type" default="scroll">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="forward" />
                        <xs:enumeration value="scroll" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="entity-one" substitutionGroup="AllActions">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="field-map" />
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="select-field" />
            </xs:sequence>
            <xs:attribute name="entity-name" type="xs:string" use="required" />
            <xs:attribute name="value-field" type="xs:string" use="required" />
            <xs:attribute name="use-cache" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="auto-field-map" default="true">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="get-related-one" substitutionGroup="AllActions">
        <xs:complexType>
            <xs:attribute name="value-field" type="xs:string" use="required" />
            <xs:attribute name="relation-name" type="xs:string" use="required" />
            <xs:attribute name="use-cache" type="xs:string" default="false" />
            <xs:attribute name="to-value-field" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    <xs:element name="get-related" substitutionGroup="AllActions">
        <xs:complexType>
            <xs:attribute type="xs:string" name="value-field" use="required" />
            <xs:attribute type="xs:string" name="relation-name" use="required" />
            <xs:attribute type="xs:string" name="map" />
            <xs:attribute type="xs:string" name="order-by-list" />
            <xs:attribute type="xs:string" name="use-cache" default="false" />
            <xs:attribute type="xs:string" name="list" use="required" />
        </xs:complexType>
    </xs:element>
    <xs:element name="condition-list">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element ref="condition-expr" />
                <xs:element ref="condition-list" />
                <xs:element ref="condition-object" />
            </xs:choice>
            <xs:attribute name="combine" default="and">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="and" />
                        <xs:enumeration value="or" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="having-condition-list">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element ref="condition-expr" />
                <xs:element ref="condition-list" />
                <xs:element ref="condition-object" />
            </xs:choice>
            <xs:attribute name="combine" default="and">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="and" />
                        <xs:enumeration value="or" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="condition-expr">
        <xs:complexType>
            <xs:attribute type="xs:string" name="field-name" use="required" />
            <xs:attribute name="operator" default="equals">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="less" />
                        <xs:enumeration value="greater" />
                        <xs:enumeration value="less-equals" />
                        <xs:enumeration value="greater-equals" />
                        <xs:enumeration value="equals" />
                        <xs:enumeration value="not-equals" />
                        <xs:enumeration value="in" />
                        <xs:enumeration value="not-in" />
                        <xs:enumeration value="between" />
                        <xs:enumeration value="like" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute type="xs:string" name="from-field" />
            <xs:attribute type="xs:string" name="value" />
            <xs:attribute name="ignore-if-null" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ignore-if-empty" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ignore-case" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ignore" default="false">
                <xs:annotation>
                    <xs:documentation>
                        Ignore the condition if flag is true.
                        Defaults to false.
                </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="condition-object">
        <xs:complexType>
            <xs:attribute type="xs:string" name="field" use="required" />
        </xs:complexType>
    </xs:element>
    <xs:element name="select-field">
        <xs:complexType>
            <xs:attribute type="xs:string" name="field-name" use="required" />
        </xs:complexType>
    </xs:element>
    <xs:element name="order-by">
        <xs:complexType>
            <xs:attribute type="xs:string" name="field-name" use="required" />
        </xs:complexType>
    </xs:element>
    <xs:element name="limit-range">
        <xs:complexType>
            <xs:attribute name="start" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Should resolve into a non-negative integer.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="size" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Should resolve into a non-negative integer.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="limit-view">
        <xs:complexType>
            <xs:attribute name="view-index" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Should resolve into a non-negative integer.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="view-size" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Should resolve into a positive integer.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="use-iterator" />
    <xs:element name="field-map">
        <xs:complexType>
            <xs:attribute type="xs:string" name="field-name" use="required" />
            <xs:attribute type="xs:string" name="from-field" />
            <xs:attribute type="xs:string" name="value" />
        </xs:complexType>
    </xs:element>

    <!-- ================ WIDGETS ================ -->
    <xs:element name="AllWidgets" abstract="true"/>
    <xs:element name="widgets">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="fail-widgets">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="column-container" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="1" maxOccurs="unbounded" name="column">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
                        </xs:sequence>
                        <xs:attribute type="xs:string" name="id" />
                        <xs:attribute type="xs:string" name="style" />
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute type="xs:string" name="id" />
            <xs:attribute type="xs:string" name="style" />
        </xs:complexType>
    </xs:element>

    <xs:element name="container" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="id" />
            <xs:attribute type="xs:string" name="style" />
            <xs:attribute type="xs:string" name="auto-update-target">
                <xs:annotation>
                    <xs:documentation>The URL to be called for periodic asynchronous area updates.
                        Some widget rendering environments support asynchronous updates.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute type="xs:string" name="auto-update-interval">
                <xs:annotation>
                    <xs:documentation>The auto-update interval, in seconds.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="horizontal-separator" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="id" />
            <xs:attribute type="xs:string" name="name" />
            <xs:attribute type="xs:string" name="style" />
        </xs:complexType>
    </xs:element>
    <xs:element name="image" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="src" />
            <xs:attribute type="xs:string" name="id" />
            <xs:attribute type="xs:string" name="style" />
            <xs:attribute type="xs:string" name="width" />
            <xs:attribute type="xs:string" name="height" />
            <xs:attribute type="xs:string" name="border" />
            <xs:attribute type="xs:string" name="alt" />
            <xs:attribute name="url-mode" default="content">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="ofbiz" />
                        <xs:enumeration value="content" />
                        <xs:enumeration value="raw" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="label" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="text" />
            <xs:attribute type="xs:string" name="id" />
            <xs:attribute type="xs:string" name="style" />
        </xs:complexType>
    </xs:element>
    <xs:element name="link" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="auto-parameters-service"/>
                <xs:element minOccurs="0" ref="auto-parameters-entity"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="parameter" />
                <xs:element minOccurs="0" ref="image" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="text" />
            <xs:attribute type="xs:string" name="id" />
            <xs:attribute type="xs:string" name="style" />
            <xs:attribute type="xs:string" name="target" />
            <xs:attribute type="xs:string" name="name" />
            <xs:attribute type="xs:string" name="target-window" />
            <xs:attribute type="xs:string" name="prefix" />
            <xs:attribute type="xs:string" name="width" />
            <xs:attribute type="xs:string" name="height" />
            <xs:attribute name="link-type" default="auto">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="auto">
                            <xs:annotation>
                                <xs:documentation>If selected the hidden-form type will be used if the url-mode is intra-app and the request specified has an event, otherwise the anchor type will be used.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="anchor" />
                        <xs:enumeration value="hidden-form" />
                        <xs:enumeration value="ajax-window" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="url-mode" default="intra-app">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="intra-app" />
                        <xs:enumeration value="inter-app" />
                        <xs:enumeration value="content" />
                        <xs:enumeration value="plain" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="full-path" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="secure" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="encode" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="parameter">
        <xs:complexType>
            <xs:attribute type="xs:string" name="param-name" use="required" />
            <xs:attribute type="xs:string" name="from-field" />
            <xs:attribute type="xs:string" name="value" />
        </xs:complexType>
    </xs:element>
    <xs:element name="auto-parameters-service">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="exclude"/>
            </xs:sequence>
            <xs:attribute name="service-name" type="xs:string" use="required">
                 <xs:annotation>
                     <xs:documentation>The service name used to resolve parameters. If empty, use form defaultServiceName. Flexible string allowed.</xs:documentation>
                 </xs:annotation>
            </xs:attribute>
            <xs:attribute name="send-if-empty" default="true">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true"/>
                        <xs:enumeration value="false"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="auto-parameters-entity">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="exclude"/>
            </xs:sequence>
            <xs:attribute name="entity-name" type="xs:string" use="required">
                 <xs:annotation>
                     <xs:documentation>The entity name used to resolve parameters. If empty use form defaultEntityName attribute. Flexible string allowed.</xs:documentation>
                 </xs:annotation>
            </xs:attribute>
            <xs:attribute name="include" default="pk">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="pk"/>
                        <xs:enumeration value="nonpk"/>
                        <xs:enumeration value="all"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="send-if-empty" default="true">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true"/>
                        <xs:enumeration value="false"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="exclude">
        <xs:complexType>
            <xs:attribute name="field-name" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="screenlet" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="title">
                <xs:annotation>
                    <xs:documentation>Title text to be placed in the screenlet title bar.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="id" type="xs:string" />
            <xs:attribute name="name" type="xs:string" />
            <xs:attribute name="collapsible" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="initially-collapsed" type="xs:string" default="false">
                <xs:annotation>
                    <xs:documentation>When set to true, screenlet will be collapsed initially. Can be an expanded string to get the value from a variable. Defaults to false.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="save-collapsed" default="true">
                <xs:annotation>
                    <xs:documentation>When set to true, screenlet collapse status is saved as user preference. Defaults to true.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="padded" default="true">
                <xs:annotation>
                    <xs:documentation>When set to true, screenlet content will be padded. Defaults to true.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute type="xs:string" name="navigation-menu-name">
                <xs:annotation>
                    <xs:documentation>Name of the screenlet include-menu sub element that will be used for screenlet navigation.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute type="xs:string" name="navigation-form-name">
                <xs:annotation>
                    <xs:documentation>Name of the screenlet include-form sub element that will be used for screenlet navigation. The form's pagination menu will be included in the screenlet title bar.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute type="xs:string" name="tab-menu-name">
                <xs:annotation>
                    <xs:documentation>Name of the screenlet include-menu sub element that will be used for the screenlet tab bar.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <!-- ================ WIDGETS - Includers ================ -->
    <xs:element name="content" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:attribute type="xs:string" name="content-id" />
            <xs:attribute type="xs:string" name="dataresource-id" />
            <xs:attribute type="xs:string" name="edit-request" />
            <xs:attribute type="xs:string" name="edit-container-style" default="editWrapper" />
            <xs:attribute type="xs:string" name="enable-edit-name" default="enableEdit" />
            <xs:attribute name="xml-escape" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute type="xs:string" name="width">
                <xs:annotation>
                    <xs:documentation>Used if non-html content to specify width of iframe.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute type="xs:string" name="height">
                <xs:annotation>
                    <xs:documentation>Used if non-html content to specify height of iframe.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute type="xs:string" name="border">
                <xs:annotation>
                    <xs:documentation>Used if non-html content to specify border of iframe.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="decorator-screen" substitutionGroup="AllWidgets">
        <xs:annotation>
            <xs:documentation>
                Renders the named screen and includes the children of this elements at the point where it finds the decorator-section-include tag.
                Note that because of the recursive nature of this tag the share-scope attribute is not availalbe.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="decorator-section" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="name" use="required" />
            <xs:attribute type="xs:string" name="location" />
        </xs:complexType>
    </xs:element>
    <xs:element name="decorator-section">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="name" use="required" />
        </xs:complexType>
    </xs:element>
    <xs:element name="decorator-section-include" substitutionGroup="AllWidgets">
        <xs:annotation>
            <xs:documentation>This is just a place holder to tell the renderer to include the parent container's contents at this point.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute type="xs:string" name="name" use="required" />
        </xs:complexType>
    </xs:element>
    <xs:element name="include-form" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:attribute type="xs:string" name="name" use="required" />
            <xs:attribute type="xs:string" name="location" use="required" />
            <xs:attribute name="share-scope" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="include-menu" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:attribute type="xs:string" name="name" use="required" />
            <xs:attribute type="xs:string" name="location" use="required" />
        </xs:complexType>
    </xs:element>
    <xs:element name="include-screen" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:attribute type="xs:string" name="name" use="required" />
            <xs:attribute type="xs:string" name="location" />
            <xs:attribute name="share-scope" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="include-tree" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:attribute type="xs:string" name="name" use="required" />
            <xs:attribute type="xs:string" name="location" use="required" />
            <xs:attribute name="share-scope" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="include-portal-page" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:attribute type="xs:string" name="id" />
            <xs:attribute name="conf-mode" default="false">
                <xs:annotation>
                    <xs:documentation>Show the portal in configuration mode.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="use-private" default="true">
                <xs:annotation>
                    <xs:documentation>If a derived private PortalPage exists for the actual UserLogin than show the private PortalPage instead of the original.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="sub-content" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:attribute type="xs:string" name="content-id" use="required" />
            <xs:attribute type="xs:string" name="map-key" use="required" />
            <xs:attribute type="xs:string" name="edit-request" />
            <xs:attribute type="xs:string" name="edit-container-style" default="editWrapper" />
            <xs:attribute type="xs:string" name="enable-edit-name" default="enableEdit" />
            <xs:attribute name="xml-escape" default="false">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="true" />
                        <xs:enumeration value="false" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="iterate-section" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="section" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="entry" use="required" />
            <xs:attribute type="xs:string" name="list" use="required" />
            <xs:attribute type="xs:string" name="key" />
            <xs:attribute type="xs:string" name="view-size" />
            <xs:attribute type="xs:string" name="paginate-target" />
            <xs:attribute type="xs:string" name="paginate" default="${paginate}">
                <xs:annotation>
                    <xs:documentation>Indicate if this section is paginated or not, true by default.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>


    <!-- ============== Platform Specific Elements =============== -->
    <xs:element name="platform-specific" substitutionGroup="AllWidgets">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" name="html">
                </xs:element>
                <xs:element minOccurs="0" ref="swing"/>
                <xs:element minOccurs="0" ref="xsl-fo"/>
                <xs:element minOccurs="0" ref="xml"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- ============== HTML Specific Elements =============== -->
    <xs:element name="HtmlWidgets" abstract="true"/>
    <!--
    <xs:element name="html">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="HtmlWidgets"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    -->
    <xs:element name="xsl-fo">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="HtmlWidgets"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="xml">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="HtmlWidgets"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="html-template" substitutionGroup="HtmlWidgets">
        <xs:complexType>
            <xs:attributeGroup ref="attlist.html-template"/>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="attlist.html-template">
        <xs:attribute type="xs:string" name="location" use="required"/>
    </xs:attributeGroup>
    <xs:element name="html-template-decorator" substitutionGroup="HtmlWidgets">
        <xs:annotation>
            <xs:documentation>
                We don't really want to encourage the use of the html-template-decorator, should be done on the screen level.
                To include the sections in the decorator template just use the "render(sectionName)" method "sections" object, FTL example: ${sections.render("main")}.
                For more efficient use the sections.render(sectionName, writer) method should be used, in FTL this would be in a transform or something.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="html-template-decorator-section"/>
            </xs:sequence>
        <xs:attribute type="xs:string" name="location" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="html-template-decorator-section">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="name" use="required" />
        </xs:complexType>
    </xs:element>
    <!-- ============== Swing Specific Elements =============== -->
    <xs:element name="swing">
        <xs:complexType/>
    </xs:element>

    <!-- ============== AngularJs Widgets =============== -->
    <xs:element name="accordion" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="accordion-group" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="close-others" />
        </xs:complexType>
    </xs:element>
    <xs:element name="accordion-group" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="heading" />
            <xs:attribute type="xs:string" name="repeat" />
        </xs:complexType>
    </xs:element>
    <xs:element name="alert" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="repeat" />
            <xs:attribute type="xs:string" name="type" />
            <xs:attribute type="xs:string" name="close" />
            <xs:attribute type="xs:string" name="text" />
        </xs:complexType>
    </xs:element>
    <xs:element name="button" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="text" />
            <xs:attribute type="xs:string" name="on-click" />
            <xs:attribute type="xs:string" name="style" />
            <xs:attribute type="xs:string" name="click-confirm-message" />
        </xs:complexType>
    </xs:element>
    <xs:element name="calendar" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="name" />
            <xs:attribute type="xs:string" name="options" />
            <xs:attribute type="xs:string" name="model" />
        </xs:complexType>
    </xs:element>
    <xs:element name="checkbox" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="text" />
        </xs:complexType>
    </xs:element>
    <xs:element name="collapse" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="collapse" />
        </xs:complexType>
    </xs:element>
    <!--
    <xs:element name="container" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="style" />
        </xs:complexType>
    </xs:element>
    -->
    <xs:element name="comments-panel" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="content-id" />
        </xs:complexType>
    </xs:element>
    <xs:element name="container-fluid" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="row-fluid" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="context" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="target" />
            <xs:attribute type="xs:string" name="parameters" />
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="field" />
        </xs:complexType>
    </xs:element>
    <xs:element name="controller" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="name" />
        </xs:complexType>
    </xs:element>
    <xs:element name="date-picker" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="show-weeks" />
            <xs:attribute type="xs:string" name="starting-day" />
            <xs:attribute type="xs:string" name="date-disabled" />
            <xs:attribute type="xs:string" name="min" />
            <xs:attribute type="xs:string" name="max" />
        </xs:complexType>
    </xs:element>
    <xs:element name="date-time" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:boolean" name="read-only" />
            <xs:attribute type="xs:string" name="format" />
        </xs:complexType>
    </xs:element>
    <xs:element name="dropdown" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="options" />
            <xs:attribute type="xs:string" name="default-text" />
            <xs:attribute type="xs:string" name="target" />
            <xs:attribute type="xs:string" name="parameters" />
            <xs:attribute type="xs:string" name="field-name" />
            <xs:attribute type="xs:string" name="description-field-name" />
            <xs:attribute type="xs:string" name="default-value" />
            <xs:attribute type="xs:string" name="placeholder" />
        </xs:complexType>
    </xs:element>
    <xs:element name="dropdown-toggle" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="option" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="text" />
        </xs:complexType>
    </xs:element>
    <xs:element name="error"/>
    <xs:element name="emphasized-text" substitutionGroup="AllWidgets"/>
    <xs:element name="field">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
                <xs:element minOccurs="0" maxOccurs="1" ref="validator-label" />
                <xs:element minOccurs="0" maxOccurs="1" ref="submit" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="title" />
            <xs:attribute type="xs:boolean" name="required-field" />
            <xs:attribute type="xs:string" name="use-when" />
        </xs:complexType>
    </xs:element>
    <xs:element name="file" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="model" />
        </xs:complexType>
    </xs:element>
    <xs:element name="file-thumbnail-image" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="data-resource-id" />
        </xs:complexType>
    </xs:element>
    <xs:element name="form" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="field" />
                <xs:element minOccurs="0" maxOccurs="unbounded" name="action-panel">
                </xs:element>
            </xs:sequence>
            <xs:attribute type="xs:string" name="type" />
            <xs:attribute type="xs:string" name="on-submit" />
        </xs:complexType>
    </xs:element>
    <xs:element name="google-chart" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="target" />
            <xs:attribute type="xs:string" name="style" />
            <xs:attribute type="xs:string" name="type" />
            <xs:attribute type="xs:boolean" name="displayed" />
            <xs:attribute type="xs:string" name="title" />
            <xs:attribute type="xs:boolean" name="is-stacked" />
            <xs:attribute type="xs:string" name="fill" />
            <xs:attribute type="xs:boolean" name="diplay-exact-values" />
            <xs:attribute type="xs:string" name="v-title" />
            <xs:attribute type="xs:string" name="h-title" />
            <xs:attribute type="xs:int" name="v-grid-lines-count" />
        </xs:complexType>
    </xs:element>
    <xs:element name="grid" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="field">
                    <xs:complexType mixed="true">
                        <xs:sequence>
                            <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
                        </xs:sequence>
                        <xs:attribute type="xs:string" name="name" />
                        <xs:attribute type="xs:string" name="title" />
                        <xs:attribute type="xs:boolean" name="editable" />
                        <xs:attribute type="xs:string" name="field-name" />
                        <xs:attribute type="xs:string" name="controller" />
                        <xs:attribute type="xs:string" name="sort-direction" />
                        <xs:attribute type="xs:string" name="cell-template-uri" />
                        <xs:attribute type="xs:boolean" name="sortable" />
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute type="xs:string" name="style" />
            <xs:attribute type="xs:short" name="row-height" />
            <xs:attribute type="xs:string" name="list-name" />
            <xs:attribute type="xs:string" name="select-target" />
            <xs:attribute type="xs:string" name="select-parameters" />
            <xs:attribute type="xs:string" name="selected-items" />
            <xs:attribute type="xs:string" name="on-before-selection-changed" />
            <xs:attribute type="xs:string" name="on-after-selection-changed" />
            <xs:attribute type="xs:string" name="on-row-double-clicked" />
            <xs:attribute type="xs:string" name="show-selection-checkbox" />
            <xs:attribute type="xs:string" name="multi-select" />
        </xs:complexType>
    </xs:element>
    <xs:element name="html" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="model" />
        </xs:complexType>
    </xs:element>
    <xs:element name="horizontal-rule" substitutionGroup="AllWidgets"/>
    <xs:element name="jit-tree" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="type" />
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="node-template-url" />
            <xs:attribute type="xs:string" name="node-parameters" />
            <xs:attribute type="xs:int" name="level-distance" />
            <xs:attribute type="xs:int" name="node-height" />
            <xs:attribute type="xs:int" name="node-width" />
            <xs:attribute type="xs:string" name="node-click" />
        </xs:complexType>
    </xs:element>
    <!--
    <xs:element name="label" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="text" />
        </xs:complexType>
    </xs:element>
    -->
    <xs:element name="line-break" substitutionGroup="AllWidgets"/>
    <xs:element name="list" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="list-item" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="text" />
        </xs:complexType>
    </xs:element>
    <xs:element name="list-item" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="repeat" />
            <xs:attribute type="xs:string" name="text" />
        </xs:complexType>
    </xs:element>
    <xs:element name="lookup" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="target" />
            <xs:attribute type="xs:string" name="field-name" />
            <xs:attribute type="xs:string" name="description-field-name" />
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="placeholder" />
            <xs:attribute type="xs:string" name="default-value" />
            <xs:attribute type="xs:string" name="parameters" />
            <xs:attribute type="xs:string" name="dependent-parameter-names" />
        </xs:complexType>
    </xs:element>
    <xs:element name="map" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="name" />
            <xs:attribute type="xs:string" name="style" />
            <xs:attribute type="xs:string" name="event" />
            <xs:attribute type="xs:string" name="options" />
        </xs:complexType>
    </xs:element>
    <xs:element name="map-marker" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="repeat" />
            <xs:attribute type="xs:string" name="value" />
            <xs:attribute type="xs:string" name="event" />
            <xs:attribute type="xs:string" name="height" />
        </xs:complexType>
    </xs:element>
    <xs:element name="map-info-window" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets"/>
            </xs:sequence>
            <xs:attribute type="xs:string" name="name" />
        </xs:complexType>
    </xs:element>
    <xs:element name="menu-bar" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="menu-item" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="title" />
            <xs:attribute type="xs:string" name="target" />
            <xs:attribute type="xs:string" name="style" />
        </xs:complexType>
    </xs:element>
    <xs:element name="menu-item">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="text" />
            <xs:attribute type="xs:string" name="target" />
            <xs:attribute type="xs:string" name="active-state" />
        </xs:complexType>
    </xs:element>
    <xs:element name="modal" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="modal-header" />
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="modal-body" />
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="modal-footer" />
            </xs:sequence>
            <xs:attribute type="xs:string" name="should-be-open" />
            <xs:attribute type="xs:string" name="options" />
        </xs:complexType>
    </xs:element>
    <xs:element name="modal-body"/>
    <xs:element name="modal-footer"/>
    <xs:element name="modal-header"/>
    <xs:element name="number" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="name" />
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="type" />
            <xs:attribute type="xs:double" name="min" />
            <xs:attribute type="xs:double" name="max" />
        </xs:complexType>
    </xs:element>
    <xs:element name="option">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="text" />
            <xs:attribute type="xs:string" name="repeat" />
        </xs:complexType>
    </xs:element>
    <xs:element name="panel" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="AllWidgets"/>
            </xs:sequence>
            <xs:attribute type="xs:string" name="header-text" />
            <xs:attribute type="xs:string" name="style" />
        </xs:complexType>
    </xs:element>
    <xs:element name="preformatted-text" substitutionGroup="AllWidgets"/>
    <xs:element name="radio" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="value" />
            <xs:attribute type="xs:string" name="text" />
        </xs:complexType>
    </xs:element>
    <xs:element name="report" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="location" />
            <xs:attribute type="xs:string" name="parameters" />
            <xs:attribute type="xs:string" name="format" />
            <xs:attribute type="xs:string" name="width" />
            <xs:attribute type="xs:string" name="height" />
        </xs:complexType>
    </xs:element>
    <xs:element name="row-fluid" substitutionGroup="AllWidgets"/>
    <xs:element name="submit">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="text" />
            <xs:attribute type="xs:string" name="style" />
        </xs:complexType>
    </xs:element>
    <xs:element name="tab-bar" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="1" maxOccurs="unbounded" ref="tab-item"/>
                <xs:element minOccurs="1" maxOccurs="1" ref="tab-content"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="tab-item">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="text" />
            <xs:attribute type="xs:string" name="target" />
            <xs:attribute type="xs:string" name="active-state" />
        </xs:complexType>
    </xs:element>
    <xs:element name="tab-content">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="view-name" />
        </xs:complexType>
    </xs:element>
    <xs:element name="text" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="type" />
            <xs:attribute type="xs:string" name="placeholder" />
            <xs:attribute type="xs:int" name="minlength" />
            <xs:attribute type="xs:int" name="maxlength" />
            <xs:attribute type="xs:string" name="pattern" />
            <xs:attribute type="xs:boolean" name="visual-editor-enable" />
        </xs:complexType>
    </xs:element>
    <xs:element name="textarea" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="placeholder" />
            <xs:attribute type="xs:boolean" name="visual-editor-enable" />
        </xs:complexType>
    </xs:element>
    <xs:element name="time-picker" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="hour-step" />
            <xs:attribute type="xs:string" name="minute-step" />
            <xs:attribute type="xs:string" name="show-meridian" />
        </xs:complexType>
    </xs:element>
    <xs:element name="tree" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="type" />
            <xs:attribute type="xs:string" name="id" />
            <xs:attribute type="xs:string" name="model" />
            <xs:attribute type="xs:string" name="node-children-field-name" />
            <xs:attribute type="xs:string" name="node-id-field-name" />
            <xs:attribute type="xs:string" name="node-label-field-name" />
        </xs:complexType>
    </xs:element>
    <xs:element name="validator-label">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="error"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="view" substitutionGroup="AllWidgets">
        <xs:complexType mixed="true">
            <xs:attribute type="xs:string" name="name" />
        </xs:complexType>
    </xs:element>
</xs:schema>
